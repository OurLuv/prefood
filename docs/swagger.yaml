basePath: /
definitions:
  handler.FoodResponse:
    properties:
      food:
        $ref: '#/definitions/model.Food'
      menu:
        items:
          $ref: '#/definitions/model.Food'
        type: array
      response:
        $ref: '#/definitions/handler.Response'
    type: object
  handler.OrderStatus:
    properties:
      status:
        type: string
    type: object
  handler.Response:
    properties:
      data: {}
      error:
        type: string
      message:
        type: string
      status:
        type: integer
    type: object
  handler.ResponseData:
    properties:
      data: {}
      error:
        type: string
      message:
        type: string
      status:
        type: integer
    type: object
  handler.ResponseId:
    properties:
      id:
        type: integer
      response:
        $ref: '#/definitions/handler.Response'
    type: object
  handler.ResponseOrder:
    properties:
      order:
        $ref: '#/definitions/model.Order'
      orders:
        items:
          $ref: '#/definitions/model.Order'
        type: array
      response:
        $ref: '#/definitions/handler.Response'
    type: object
  handler.ResponseRestaurant:
    properties:
      response:
        $ref: '#/definitions/handler.Response'
      restaurant:
        $ref: '#/definitions/model.Restaurant'
      restaurants:
        items:
          $ref: '#/definitions/model.Restaurant'
        type: array
    type: object
  handler.ResponseToken:
    properties:
      status:
        type: integer
      token:
        type: string
    type: object
  handler.UserLogin:
    properties:
      email:
        maxLength: 255
        type: string
      password:
        maxLength: 255
        type: string
    required:
    - email
    - password
    type: object
  model.Category:
    properties:
      id:
        type: integer
      name:
        maxLength: 255
        type: string
      restaurant_id:
        type: integer
    required:
    - name
    type: object
  model.CreateOrderRequest:
    properties:
      additive:
        type: string
      channel:
        type: string
      discount:
        type: string
      food_order:
        items:
          $ref: '#/definitions/model.FoodOrder'
        type: array
      name:
        type: string
      phone:
        type: string
    type: object
  model.Food:
    properties:
      category:
        $ref: '#/definitions/model.Category'
      category-id:
        type: integer
      description:
        type: string
      id:
        type: integer
      image:
        type: string
      in_stock:
        type: boolean
      name:
        maxLength: 255
        type: string
      price:
        type: integer
      restaurant_id:
        type: integer
      time:
        type: string
    required:
    - image
    - name
    - price
    type: object
  model.FoodOrder:
    properties:
      id:
        type: integer
      quantity:
        type: integer
    type: object
  model.Order:
    properties:
      additive:
        type: string
      arrive:
        type: string
      channel:
        type: string
      discount:
        type: string
      food:
        items:
          $ref: '#/definitions/model.Food'
        type: array
      food_order:
        items:
          $ref: '#/definitions/model.FoodOrder'
        type: array
      id:
        type: integer
      name:
        type: string
      ordered:
        type: string
      phone:
        type: string
      restaurant_id:
        type: integer
      status:
        type: string
      total:
        type: integer
    type: object
  model.Restaurant:
    properties:
      city:
        type: string
      client_id:
        type: integer
      country:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        maxLength: 255
        type: string
      open:
        type: boolean
      phone:
        type: string
      state:
        type: string
      street:
        type: string
      time:
        type: string
    required:
    - email
    - name
    - phone
    type: object
  model.User:
    properties:
      email:
        maxLength: 255
        type: string
      firstname:
        maxLength: 255
        type: string
      id:
        type: integer
      lastname:
        type: string
      password:
        maxLength: 255
        type: string
    required:
    - email
    - firstname
    - password
    type: object
host: localhost:8080
info:
  contact: {}
  description: REST API server for managing data in a food ordering application.
  title: PreFood
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: sign in account
      operationId: sign-in-account
      parameters:
      - description: account info
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/handler.UserLogin'
      produces:
      - application/json
      responses:
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.Response'
      summary: SignIn
      tags:
      - Auth
  /restaurants:
    get:
      description: get all restaurants
      operationId: get-restaurants
      produces:
      - application/json
      responses:
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: GetRestaurants
      tags:
      - Restaurant
    post:
      consumes:
      - application/json
      description: create restaurant
      operationId: create-restaurant
      parameters:
      - description: restaurant info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.Restaurant'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseId'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: CreateRestaurant
      tags:
      - Restaurant
  /restaurants/{restaurant_id}:
    delete:
      description: delete restaurant by id
      operationId: delete-restaurant
      parameters:
      - description: restaurant id
        in: path
        name: restaurant_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: DeleteRestaurant
      tags:
      - Restaurant
    get:
      description: get restaurant by id
      operationId: get-restaurant-by-id
      parameters:
      - description: restaurant id
        in: path
        name: restaurant_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseRestaurant'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: GetRestaurantById
      tags:
      - Restaurant
    put:
      consumes:
      - application/json
      description: update restaurant
      operationId: update-restaurant
      parameters:
      - description: restaurant id
        in: path
        name: restaurant_id
        required: true
        type: integer
      - description: restaurant info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.Restaurant'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: UpdateRestaurant
      tags:
      - Restaurant
  /restaurants/{restaurant_id}/category:
    get:
      consumes:
      - application/json
      description: get categorie
      operationId: get-categories
      parameters:
      - description: restaurant id
        in: path
        name: restaurant_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseData'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.Response'
      summary: GetCategories
      tags:
      - Category
    post:
      consumes:
      - application/json
      description: create category
      operationId: create-category
      parameters:
      - description: restaurant id
        in: path
        name: restaurant_id
        required: true
        type: integer
      - description: category info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseId'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: CreateCategory
      tags:
      - Category
  /restaurants/{restaurant_id}/category/{category_id}:
    delete:
      consumes:
      - application/json
      description: delete category
      operationId: delete-category
      parameters:
      - description: restaurant id
        in: path
        name: restaurant_id
        required: true
        type: integer
      - description: category id
        in: path
        name: category_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: DeleteCategory
      tags:
      - Category
    get:
      consumes:
      - application/json
      description: get category by id
      operationId: get-category-by-id
      parameters:
      - description: restaurant id
        in: path
        name: restaurant_id
        required: true
        type: integer
      - description: category id
        in: path
        name: category_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseId'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.Response'
      summary: GetCategoryById
      tags:
      - Category
    put:
      consumes:
      - application/json
      description: update category
      operationId: update-category
      parameters:
      - description: restaurant id
        in: path
        name: restaurant_id
        required: true
        type: integer
      - description: category id
        in: path
        name: category_id
        required: true
        type: integer
      - description: category info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseId'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: UpdateCategory
      tags:
      - Category
  /restaurants/{restaurant_id}/menu:
    get:
      description: get food
      operationId: get-food
      parameters:
      - description: restaurant id
        in: path
        name: restaurant_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.FoodResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.Response'
      summary: GetFood
      tags:
      - Menu
    post:
      consumes:
      - multipart/form-data
      description: create food
      operationId: create-food
      parameters:
      - description: restaurant id
        in: path
        name: restaurant_id
        required: true
        type: integer
      - description: food image
        in: formData
        name: image
        required: true
        type: file
      - description: food info
        in: formData
        name: food
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.FoodResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: CreateFood
      tags:
      - Menu
    put:
      consumes:
      - multipart/form-data
      description: update food
      operationId: update-food
      parameters:
      - description: restaurant id
        in: path
        name: restaurant_id
        required: true
        type: integer
      - description: food image
        in: formData
        name: image
        required: true
        type: file
      - description: food info
        in: formData
        name: food
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.FoodResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: UpdateFood
      tags:
      - Menu
  /restaurants/{restaurant_id}/menu/{id}:
    get:
      description: get food by id
      operationId: get-food-by-id
      parameters:
      - description: restaurant id
        in: path
        name: restaurant_id
        required: true
        type: integer
      - description: food id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.FoodResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.Response'
      summary: GetFoodById
      tags:
      - Menu
  /restaurants/{restaurant_id}/openclose:
    post:
      description: open or close restaurant
      operationId: open-close-restaurant
      parameters:
      - description: restaurant id
        in: path
        name: restaurant_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: OpenCloseRestaurant
      tags:
      - Restaurant
  /restaurants/{restaurant_id}/orders:
    get:
      description: get all orders
      operationId: get-order
      parameters:
      - description: restaurant id
        in: path
        name: restaurant_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseOrder'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: GetOrders
      tags:
      - Order
    post:
      consumes:
      - application/json
      description: create order
      operationId: create-order
      parameters:
      - description: restaurant id
        in: path
        name: restaurant_id
        required: true
        type: integer
      - description: order info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.CreateOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseOrder'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: CreateOrder
      tags:
      - Order
  /restaurants/{restaurant_id}/orders/{order_id}:
    get:
      description: get order by id
      operationId: get-order-by-id
      parameters:
      - description: restaurant id
        in: path
        name: restaurant_id
        required: true
        type: integer
      - description: order id
        in: path
        name: order_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ResponseOrder'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: GetOrderById
      tags:
      - Order
    post:
      consumes:
      - application/json
      description: change order status (IN_PROCCESS/READY/RECIEVED)
      operationId: change-order-status
      parameters:
      - description: restaurant id
        in: path
        name: restaurant_id
        required: true
        type: integer
      - description: order info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.OrderStatus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.Response'
      security:
      - ApiKeyAuth: []
      summary: ChangeOrderStatus
      tags:
      - Order
  /signup:
    post:
      consumes:
      - application/json
      description: create account
      operationId: create-account
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.Response'
      summary: SignUp
      tags:
      - Auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
